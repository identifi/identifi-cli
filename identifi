#!/usr/bin/env node
'use strict';
var packageJson = require('./package.json');
var identifi = require('commander');
var api = require('identifi-lib');

identifi
  .version(packageJson.version)
  .option('-vt, --viewpoint-type [type]', 'Set trust viewpoint type')
  .option('-vv, --viewpoint-value [value]', 'Set trust viewpoint value')
  .option('-d, --max-distance [distance]', 'Maximum trust distance from viewpoint')
  .option('-l, --limit [limit]', 'Limit the amount of results')
  .option('-o, --offset [offset]', 'Offset of results list');

var options = {
  viewpointType: identifi.viewpointType,
  viewpointValue: identifi.viewpointValue,
  maxDistance: identifi.maxDistance,
  limit: identifi.limit || 10,
  offset: identifi.offset || 0
};

identifi
  .command('search <idValue>')
  .description('Search for an identity')
  .action(function(query) {
    api
      .search(query, options)
      .then(console.log, console.log);
  });

identifi
  .command('overview <idType> <idValue>')
  .description('Get an overview of an identity')
  .action(function(type, value, options) {
    api
      .get_overview(type, value)
      .then(console.log, console.log);
  });

identifi
  .command('received <idType> <idValue>')
  .description('Get the messages received by an identity')
  .action(function(type, value, options) {
    api
      .get_received(type, value)
      .then(console.log, console.log);
  });
  
identifi
  .command('sent <idType> <idValue>')
  .description('Get the messages sent by an identity')
  .action(function(type, value, options) {
    api
      .get_sent(type, value)
      .then(console.log, console.log);
  });

identifi
  .command('identity <idType> <idValue>')
  .description('Get the identifiers belonging to an identity')
  .action(function(type, value, options) {
    api
      .get_connections(type, value)
      .then(console.log, console.log);
  });

identifi.parse(process.argv);

module.exports = identifi;

if (!process.argv.slice(2).length) {
  identifi.outputHelp();
}
